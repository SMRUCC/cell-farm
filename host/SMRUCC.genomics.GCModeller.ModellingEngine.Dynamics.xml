<?xml version="1.0"?>
<doc>
<assembly>
<name>
SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics
</name>
</assembly>
<members>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.EnvirClone">
 <summary>
 Clone helper for <see cref="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel"/>
 </summary>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Boundary">
 <summary>
 the reaction flux dynamics bounds range
 </summary>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Boundary.reverse">
 <summary>
 反向的上限为零的售后表示不可逆反应
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Channel">
 <summary>
 Biological flux object model, the reaction channel.
 
 (反应过程通道)
 </summary>
 <remarks>
 make flux dynamics association between a set of metabolite mass <see cref="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Variable"/>.
 the flux dynamics could be affects via the environment <see cref="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Controls"/>. dynamics
 of the reaction flux was contraint via the <see cref="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Channel.bounds"/> range.
 </remarks>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Channel.bounds">
 <summary>
 因为细胞微环境内的容量很小，没有办法使整个反应过程以很大的速率来进行
 在这里设置反应的正反过程这两个方向上的上下限？
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Channel.direct">
 <summary>
 在衡量了<see cref="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Channel.forward"/>和<see cref="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Channel.reverse"/>的效应大小之后，当前的反应的方向
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Channel.CoverLeft(System.Collections.Generic.Dictionary{System.String,System.Double},System.Double)">
 <summary>
 
 </summary>
 <param name="shares">事件并行化模拟因子</param>
 <param name="regulation"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Channel.CoverRight(System.Collections.Generic.Dictionary{System.String,System.Double},System.Double)">
 <summary>
 
 </summary>
 <param name="shares">事件并行化模拟因子</param>
 <param name="regulation"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Channel.minimalUnit(System.Collections.Generic.Dictionary{System.String,System.Double},System.Collections.Generic.IEnumerable{SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Variable},System.Double,System.Double)">
 <summary>
 得到当前的物质内容所能够支撑的最小反应单位
 </summary>
 <param name="factors"></param>
 <param name="regulation"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Directions">
 <summary>
 反应过程的方向
 </summary>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Directions.stop">
 <summary>
 反应过程将不会发生
 </summary>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Extensions.ToString(SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Channel)">
 <summary>
 string debug view
 </summary>
 <param name="reaction"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.AdditiveControls">
 <summary>
 基于累加效应的动力学模型
 
 这个模型可能比较适用于基因表达过程的简略建模
 </summary>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.AdditiveControls.coefficient">
 <summary>
 计算出当前的调控效应单位
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.AdditiveControls.op_Implicit(System.Double)~SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.AdditiveControls">
 <summary>
 这个反应在当前方向上是自然发生的，速率为<see cref="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Controls.baseline"/>
 </summary>
 <param name="base"></param>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Controls">
 <summary>
 对反应过程的某一个方向的控制效应
 </summary>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Controls.baseline">
 <summary>
 没有任何调控的时候的基准反应单位，因为有些过程是不需要调控以及催化的
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Controls.inhibition">
 <summary>
 如果抑制的总量大于激活的总量，那么这个调控的反应过程将不会进行
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.KineticsControls">
 <summary>
 主要是应用于酶促动力学反应过程的计算
 </summary>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.KineticsControls.coefficient">
 <summary>
 计算出当前的调控效应单位
 </summary>
 <returns></returns>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.KineticsControls.lambda">
 <summary>
 lambda function
 </summary>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.KineticsControls.pars">
 <summary>
 debug view of the kinetics function parameters
 </summary>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.KineticsControls.parameters">
 <summary>
 get kinetics parameter mass reference names
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.KineticsOverlapsControls.parameters">
 <summary>
 get kinetics parameter mass reference names
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.ProfileControls">
 <summary>
 主要是应用于温度和ph值对蛋白变性过程的影响的动力学建模
 </summary>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Factor">
 <summary>
 A mass factor(molecule entity) insdie the simulator runtime environment
 </summary>
 <remarks>
 一个变量因子，这个对象主要是用于存储值
 </remarks>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Factor.ID">
 <summary>
 the unique reference id of current molecule
 </summary>
 <returns></returns>
 <remarks>
 this unique instance id usually be in format like: ``id@compart_id``
 </remarks>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Factor.role">
 <summary>
 分子角色
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Factor.name">
 <summary>
 the molecule entity name, just used for debug view
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Factor.cellular_compartment">
 <summary>
 the cellular compartment id reference of this molecule entity
 </summary>
 <returns></returns>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Factor.m_mass">
 <summary>
 this mass factor value
 </summary>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Factor.#ctor(System.String,SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassRoles,System.String)">
 <summary>
 create a new mass factor inside the runtime environment with value assigned ZERO.
 </summary>
 <param name="id$"></param>
 <param name="role"></param>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Factor.reset(System.Double)">
 <summary>
 reset the mass value to a given <paramref name="value"/> number.
 </summary>
 <param name="value"></param>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassDynamics">
 <summary>
 Convert <see cref="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Channel"/> matrix to mass equations
 </summary>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassDynamics.Name">
 <summary>
 <see cref="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Factor.ID"/>
 </summary>
 <returns></returns>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassDynamics.factors">
 <summary>
 这个因子向量是相对于反应过程从左到右而言的
 </summary>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassDynamics.PopulateDynamics(SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel)">
 <summary>
 create dynamics equation for RK4 ODEs solver
 </summary>
 <param name="env"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassRoles">
 <summary>
 物质的角色分类类型
 </summary>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassRoles.gene">
 <summary>
 gene template of the RNA molecules, usually be a constant 1, binding to unchanged.
 </summary>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassRoles.mRNA">
 <summary>
 realtime gene instance molecule, could be translate to protein
 </summary>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassRoles.tRNA">
 <summary>
 realtime gene instance molecule
 </summary>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassRoles.rRNA">
 <summary>
 realtime gene instance molecule,
 </summary>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassRoles.RNA">
 <summary>
 realtime gene instance molecule, other RNA molecules
 </summary>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassRoles.polypeptide">
 <summary>
 realtime gene instance molecule,
 </summary>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassRoles.protein">
 <summary>
 realtime gene instance molecule, 蛋白包括单体蛋白或者复合物蛋白
 </summary>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassRoles.compound">
 <summary>
 metabolite instance molecule object. 小分子化合物
 </summary>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassTable">
 <summary>
 the cellular mass environment 
 </summary>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassTable.CompartTable.Keys">
 <summary>
 get a collection of the cellular compartment id
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassTable.CompartTable.variable(System.String,System.String,System.Double)">
 <summary>
 Create a mass factor link to the current mass environment
 </summary>
 <param name="mass"></param>
 <param name="coefficient"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassTable.GetMassValues">
 <summary>
 make a snapshot of current mass environment
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassTable.Delete(System.String)">
 <summary>
 delete metabolites from all compartment
 </summary>
 <param name="key"></param>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassTable.GetRole(SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassRoles)">
 <summary>
 filter all molecules with a specific <see cref="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassRoles"/> filter condition.
 </summary>
 <param name="role"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassTable.variables(System.Collections.Generic.IEnumerable{SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Variable},System.Double,System.String)">
 <summary>
 refresh and make copy of the mass factor data to the simulator core links
 </summary>
 <param name="compounds"></param>
 <param name="factor"></param>
 <param name="compart_id"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassTable.variables(System.Collections.Generic.IEnumerable{SMRUCC.genomics.ComponentModel.EquaionModel.DefaultTypes.CompoundSpecieReference},Microsoft.VisualBasic.ComponentModel.Collection.Index{System.String})">
 <summary>
 create molecule variable in the flux model
 </summary>
 <param name="compounds"></param>
 <param name="templates"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassTable.variable(System.String,System.String,System.Double)">
 <summary>
 Create a mass factor link to the current mass environment
 </summary>
 <param name="mass"></param>
 <param name="coefficient"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassTable.GetByKey(System.Collections.Generic.IEnumerable{System.String},System.String)">
 <summary>
 
 </summary>
 <param name="keys">a collection of the molecule mass id</param>
 <param name="compart_id"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassTable.addNew(System.String,SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.MassRoles,System.String)">
 <summary>
 这个函数会先判断目标对象是否存在，只会添加不存在的对象
 </summary>
 <param name="entity"></param>
 <returns>
 this function returns the entity id back
 </returns>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Variable">
 <summary>
 针对描述某一个生物学功能的参数变量
 </summary>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Variable.mass">
 <summary>
 对反应容器之中的某一种物质的引用
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Variable.coefficient">
 <summary>
 在反应过程之中的变异系数，每完成一个单位的反应过程，当前的<see cref="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Variable.mass"/>
 将会丢失或者增加这个系数相对应的数量的含量
 
 这个参数应该是一个大于零的数
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Variable.isTemplate">
 <summary>
 当前的这种物质因子在目标反应通道之中是否为模板物质？对于模板物质而言，其容量是不会被消耗掉的
 例如，转录过程或者翻译过程，基因对象或者mRNA对象为模板物质，其不会像小分子反应一样作为底物被消耗掉
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.NamespaceDoc">
 <summary>
 这个命名空间下的东西构成了一个通用的生物化学反应模拟器
 并不是特指虚拟细胞计算引擎
 </summary>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel">
 <summary>
 一个反应容器，也是一个微环境，这在这个反应容器之中包含有所有的反应过程
 
 (这是一个通用的生物化学反应过程模拟器，是整个虚拟细胞计算引擎的核心部件)
 </summary>
 <remarks>
 a container of a set of the reaction <see cref="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Channel"/> and mass <see cref="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Factor"/>.
 </remarks>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel.Channels">
 <summary>
 当前的这个微环境之中的所有的反应过程列表，在这个集合之中包括有：
 
 1. 代谢过程
 2. 转录过程
 3. 翻译过程
 4. 跨膜转运过程
 </summary>
 <returns></returns>
 <remarks>
 虚拟细胞中的生命活动过程事件网络
 
 相当于常微分方程系统之中的一个y方程?
 </remarks>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel.MassEnvironment">
 <summary>
 当前的这个微环境之中的所有的物质列表，会包括代谢物，氨基酸，RNA等物质信息
 </summary>
 <returns></returns>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel.shareFactors">
 <summary>
 因为在现实中这些反应过程是同时发生的，所以在这里使用这个共享因子来模拟并行事件
 </summary>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel.m_dynamics">
 <summary>
 Dynamics wrapper to the RK4 odes solver
 </summary>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel.parallel_odes">
 <summary>
 parallel odes solver
 </summary>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel.load(System.Collections.Generic.IEnumerable{SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Factor})">
 <summary>
 set mass factors to the container runtime
 </summary>
 <param name="massEnvir"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel.load(System.Collections.Generic.IEnumerable{SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Channel})">
 <summary>
 set flux network for the cellular kinetics simulation
 </summary>
 <param name="flux"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel.ContainerIterator(System.Int32,System.Int32)">
 <summary>
 当前的这个微环境的迭代器
 </summary>
 <param name="maxTime">最大的模拟时间长度</param>
 <param name="resolution">时间分辨率，这个值应该是大于<paramref name="maxTime"/>参数的一个值</param>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel.fp_dfdx_sequence(System.Double,Microsoft.VisualBasic.Math.LinearAlgebra.Vector@)">
 <summary>
 debug mode, run ODEs in sequential
 </summary>
 <param name="dx"></param>
 <param name="dy"></param>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel.fp_dfdx_parallel(System.Double,Microsoft.VisualBasic.Math.LinearAlgebra.Vector@)">
 <summary>
 product mode, run ODEs in parallel
 </summary>
 <param name="dx"></param>
 <param name="dy"></param>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel.Reset(System.Collections.Generic.Dictionary{System.String,System.Double})">
 <summary>
 重置反应环境模拟器之中的内容
 </summary>
 <param name="massInit"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Kinetics.KineticsFactor.GetValue">
 <summary>
 The formulation evaluation.
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Kinetics.ModularRateLaws.FluxRate(SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Kinetics.KineticsFactor,SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Kinetics.KineticsFactor,SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Kinetics.KineticsFactor,SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Kinetics.KineticsFactor,SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Kinetics.KineticsFactor)">
 <summary>
 Modular rate laws
 share the form Equation (1). The terms f [Equation (12)], T [Equation (10)],
 D [Equation 11] and Dreg [Equation (13)] depend on reaction stoichiometry,
 rate law, allosteric regulation and on the preferred model parameterization.
 </summary>
 <param name="u">Enzyme level</param>
 <param name="f">Complete or partial regulation</param>
 <param name="T">Stoichiometry 3 parameterizations</param>
 <param name="D">5 rate laws</param>
 <param name="Dreg">Specific regulation</param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Engine.SnapshotDriver">
 <summary>
 Data storage snapshot driver
 </summary>
 <param name="iteration">Iteration number</param>
 <param name="data">
 Read snapshot data from the simulator engine
 </param>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Engine.IOmicsDataAdapter">
 <summary>
 Data storage adapter driver
 </summary>
</member>
<member name="P:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Engine.IOmicsDataAdapter.mass">
 <summary>
 The metabolite mass id index list
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Engine.FluxEmulator">
 <summary>
 a container of <see cref="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Core.Vessel"/> as simulation core.
 </summary>
</member>
<member name="F:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Engine.FluxEmulator.core">
 <summary>
 The biological flux simulator engine core module
 </summary>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.Engine.OmicsTuple`1">
 <summary>
 A triple of the omics data in general three levels
 </summary>
 <typeparam name="T"></typeparam>
</member>
<member name="T:SMRUCC.genomics.GCModeller.ModellingEngine.Dynamics.NamespaceDoc">
 <summary>
 The Virtual Cell Engine from GCModeller
 </summary>
 <remarks>
 Virtual cell technology is an advanced computational modeling technique used to simulate and
 study the complex behaviors of cells. It involves creating detailed, mathematical models that 
 represent the various components and processes within a cell. These models can help researchers
 understand how cells function, how they interact with their environment, and how diseases and 
 treatments affect them at a molecular level. Here's an overview of virtual cell technology:
 
 ### Key Concepts:
 
 1. **Multiscale Modeling**: Virtual cell models often incorporate multiple scales, from the atomic
 and molecular level to the cellular and tissue level. This allows researchers to study how different 
 levels of biological organization interact.
 2. **Integration of Data**: These models integrate data from various sources, including experimental
 data, genomic information, and biochemical pathways, to create a cohesive representation of cellular 
 processes.
 3. **Biological Complexity**: Virtual cell models aim to capture the complexity of cellular systems, 
 including the interactions of proteins, DNA, RNA, lipids, and other molecules.
 
 ### Components of Virtual Cell Models:
 
 - **Structural Models**: These models describe the 3D structure of the cell and its components, 
 often using data from techniques like cryo-electron microscopy and X-ray crystallography.
 
 - **Molecular Dynamics**: This aspect involves simulating the movements and interactions of atoms and molecules within the cell.
 - **Metabolic Pathways**: Models can represent the biochemical reactions and pathways that occur within a cell, including metabolism, signal transduction, and gene expression.
 - **Electrophysiology**: For cells that are electrically active, such as neurons and muscle cells, virtual cell models can simulate electrical activity and ion channel dynamics.
 
 ### Applications:
 
 - **Drug Discovery**: Virtual cell models can be used to predict how potential drugs will interact with cellular targets, helping to prioritize compounds for further study and reduce the time and cost of drug development.
 - **Disease Mechanisms**: By simulating the effects of genetic mutations or environmental factors, researchers can study the development of diseases and identify potential therapeutic targets.
 - **Toxicology**: These models can predict the toxic effects of chemicals on cells, which is useful for assessing the safety of potential drugs and environmental contaminants.
 - **Tissue Engineering**: Virtual cell technology can aid in designing and testing artificial tissues and organs by simulating how cells might behave in these constructs.
 
 ### Tools and Software:
 
 - **CellBlender**: An extension to the popular 3D modeling software Blender, focused on cellular simulations.
 - **Virtual Cell (VCell)**: A software environment developed specifically for modeling and simulation of cell biology.
 - **GROMACS**: A versatile package to perform molecular dynamics, primarily for biomolecules.
 - **SBML (Systems Biology Markup Language)**: A standard format for representing models of biochemical reaction networks, which can be used in various simulation software.
 
 ### Challenges:
 
 - **Validation**: Ensuring that the virtual cell models accurately reflect real cellular behavior is a significant challenge, requiring extensive comparison with experimental data.
 - **Computational Power**: Simulating the complex interactions within a cell requires substantial computational resources.
 - **Data Integration**: Integrating diverse data types and maintaining model consistency can be difficult.
 Virtual cell technology is a rapidly evolving field that holds great promise for advancing our understanding of cellular biology and improving human health through applications in medicine and biotechnology.
 </remarks>
</member>
</members>
</doc>
